#!/usr/bin/env ruby
require 'rubygems'
require 'bundler/setup'

require 'cap'
require 'cap/client'
require 'cap/vivo'
require 'pry'

include Cap::Vivo::GraphUtils
include Cap::Vivo::Orgs

# init configs
config = Cap.configuration

# client will load profile data from a local repo; if it is empty, it
# can be populated from the CAP API using `client.get_profiles`.  The
# profile data is available in `client.profiles`.
client = Cap::Client::Client.new
ids = client.profile_ids
puts "Currently holding #{ids.length} CAP profiles in local repo"

if config.cap_testing
  # Stanford CAP to VIVO sample data
  require_relative 'cap_sample_profiles'
  test_profile_docs = test_profiles.map do |id|
    puts "profile: #{id}"
    p = client.profile_doc(id)
    pubs = client.publication_doc(id)
    p['publications'] = pubs.nil? ? [] : pubs['publications']
    p
  end
else
  test_profile_docs = []
end

binding.pry;
